properties
	(a,b,c,...) dimensions
	slicing and reshaping
object creation
	single dimension
		np.arange, np.linspace
	multiple dimensions
		np.ones_like
object usage
	binary operations
		ufuncs
			possibly vectorized
			support reduce operation
		broadcasting
			matches from rightmost dimension, e.g. (1,2,3,4) and (3,4) becomes (1,1,3,4)
		+, * (elementwise product), @ (matrix product)
	indexing
		basic indexing
			integer or slice
			a[1,2,3] == a[(1,2,3)]
			:
		advanced indexing
			non-tuple sequence, ndarray, or tuple with one of the previous objects
			always creates copies unless in an assignment
			integer indexing
				e.g. x[[1,2,3],[4,5,6]]
				each element is the indices of each dimension to be selected
				shape of element is shape of return type
			boolean indexing
				x>5 : boolean array
				x[x>5] chooses these elements
object destruction
	usually different views to the same object
backend
	multiarraymodule.c
		array_module_methods
			used in static struct PyModuleDef moduledef={...}
development
	set up environment
		add Python.h include path
			$(python-config --includes)
		built headers from meson
			build/meson-cpu
		set numpy version
			define in c_cpp_properties
	build numpy
		python setup.py build_ext -i
